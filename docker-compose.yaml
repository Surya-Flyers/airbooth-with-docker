version: "3.8"
services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - mongo-db:/data/db
    networks:
      - backend

  server:
    container_name: "airbooth-server-c"
    image: "airbooth-server-i"
    # volumes:
    #   - "/Users/Win10/Documents/webrtc/media-soup-with-docker/src"
    depends_on:
      - mongodb
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    tty: true
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
      - "3000:3000"
      - "2000-2999:2000-2999"
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
    volumes:
      - ./server:/server/
      - server-node-modules:/server/node_modules
    networks:
      - backend
      - frontend
  client-airbooth-app:
    image: client-airbooth-i
    build:
      context: ./client/airbooth-app
      dockerfile: Dockerfile
    container_name: client-airbooth-c
    volumes:
      - ./client/airbooth-app:/client/airbooth-app
      - client-airbooth-app-node-modules:/client/airbooth-app/node_modules/
    ports:
      - "3006:5173"
    stdin_open: true
    environment:
      - NODE_ENV=development

  client-inspector-admin:
    image: client-inspector-admin-i
    build:
      context: ./client/inspector-admin
      dockerfile: Dockerfile
    container_name: client-inspector-admin-c
    volumes:
      - ./client/inspector-admin:/client/inspector-admin
      - client-inspector-admin-node-modules:/client/inspector-admin/node_modules/
    ports:
      - "3007:5174"
    stdin_open: true
    environment:
      - NODE_ENV=development
volumes:
  mongo-db:
  server-node-modules:
  client-airbooth-app-node-modules:
  client-inspector-admin-node-modules:

networks:
  backend:
  frontend:
