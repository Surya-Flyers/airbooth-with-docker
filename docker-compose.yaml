version: "3.8"
services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - mongo-db:/data/db
    networks:
      - backend
      # cloud_conference:

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./server/certificates/ssl:/etc/nginx/certs
    ports:
      - "3000:80"
      - "443:443"
      - "3001-3999:3001-3999"
    depends_on:
      - server
      # - server-two
      # - server-three
    networks:
      - backend
      - frontend
      # cloud_conference:

  redis:
    image: redis:alpine
    expose:
      - "6379"

  server:
    container_name: "airbooth-server-c"
    image: "airbooth-server-i"
    depends_on:
      - mongodb
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    tty: true
    expose:
      - "3000"
      - "3001-3999"
    # ports:
    # - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    # - "3000:3000"
    # - "3001-3999:3001-3999"
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
      - SERVER_NAME=server_one
    volumes:
      - ./server:/server/
      - server-node-modules:/server/node_modules
    networks:
      - backend
      - frontend
      # cloud_conference:
      #   ipv4_address: 172.88.0.3

  # server-two:
  #   container_name: "airbooth-server-c-two"
  #   image: "airbooth-server-i-two"
  #   depends_on:
  #     - mongodb
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   env_file: ./.env
  #   tty: true
  #   expose:
  #     - "3000"
  #     - "2000-2999"
  #   environment:
  #     - DB_HOST=mongodb
  #     - DB_USER=$MONGODB_USER
  #     - DB_PASSWORD=$MONGODB_PASSWORD
  #     - DB_NAME=$MONGODB_DATABASE
  #     - DB_PORT=$MONGODB_DOCKER_PORT
  #     - CLIENT_ORIGIN=$CLIENT_ORIGIN
  #     - SERVER_NAME=server_two
  #   volumes:
  #     - ./server:/server/
  #     - server-node-modules:/server/node_modules
  #   networks:
  #     - backend
  #     - frontend

  # server-three:
  #   container_name: "airbooth-server-c-three"
  #   image: "airbooth-server-i-three"
  #   depends_on:
  #     - mongodb
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   env_file: ./.env
  #   tty: true
  #   expose:
  #     - "3000"
  #     - "2000-2999"
  #   environment:
  #     - DB_HOST=mongodb
  #     - DB_USER=$MONGODB_USER
  #     - DB_PASSWORD=$MONGODB_PASSWORD
  #     - DB_NAME=$MONGODB_DATABASE
  #     - DB_PORT=$MONGODB_DOCKER_PORT
  #     - CLIENT_ORIGIN=$CLIENT_ORIGIN
  #     - SERVER_NAME=server_three
  #   volumes:
  #     - ./server:/server/
  #     - server-node-modules:/server/node_modules
  #   networks:
  #     - backend
  #     - frontend

  client-airbooth-app:
    image: client-airbooth-i
    build:
      context: ./client/airbooth-app
      dockerfile: Dockerfile
    container_name: client-airbooth-c
    volumes:
      - ./client/airbooth-app:/client/airbooth-app
      - client-airbooth-app-node-modules:/client/airbooth-app/node_modules/
    ports:
      - "4006:5173"
    stdin_open: true
    environment:
      - NODE_ENV=development

  client-inspector-admin:
    image: client-inspector-admin-i
    build:
      context: ./client/inspector-admin
      dockerfile: Dockerfile
    container_name: client-inspector-admin-c
    volumes:
      - ./client/inspector-admin:/client/inspector-admin
      - client-inspector-admin-node-modules:/client/inspector-admin/node_modules/
    ports:
      - "4007:5174"
    stdin_open: true
    environment:
      - NODE_ENV=development
  client-IAM-app:
    image: client-iam-i
    build:
      context: ./client/IAM-app
      dockerfile: Dockerfile
    container_name: client-IAM-c
    volumes:
      - ./client/IAM-app:/client/IAM-app
      - client-IAM-app-node-modules:/client/IAM-app/node_modules/
    ports:
      - "4008:5173"
    stdin_open: true
    environment:
      - NODE_ENV=development
volumes:
  mongo-db:
  server-node-modules:
  client-airbooth-app-node-modules:
  client-inspector-admin-node-modules:
  client-IAM-app-node-modules:

networks:
  backend:
  frontend:
  # cloud_conference:
  #   ipam:
  #     config:
  #       - subnet: 172.88.0.0/16
